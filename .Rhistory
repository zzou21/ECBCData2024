fill = "Cluster") +
scale_fill_manual(values = c("1" = "blue", "2" = "green", "3" = "red"),
labels = c("1" = "Cluster 1", "2" = "Cluster 2", "3" = "Cluster 3")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(percentage_p1, aes(x = Year_Interval, y = percentage, fill = as.factor(cluster_P1))) +
geom_bar(stat = "identity") +
labs(title = "Percentage of Works in Each Cluster Over 5-Year Intervals",
x = "Year Interval",
y = "Percentage",
fill = "Cluster") +
scale_fill_manual(values = c("1" = "blue", "2" = "green", "3" = "red"),
labels = c("1" = "Cluster 1", "2" = "Cluster 2", "3" = "Cluster 3")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(percentage_p1, aes(x = Year_Interval, y = percentage, color = as.factor(cluster_P1), group = cluster_P1)) +
geom_line(size = 1) +
geom_point() +
labs(title = "Percentage of Works in Each Cluster Over Time (5-Year Intervals)",
x = "Year Interval",
y = "Percentage",
color = "Cluster") +
scale_fill_manual(values = c("1" = "blue", "2" = "green", "3" = "red"),
labels = c("1" = "Cluster 1", "2" = "Cluster 2", "3" = "Cluster 3")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(cluster)
library(tidyverse)
library(factoextra)
library(mclust)
library(stringr)
df = read.csv("../Projection/data/projectionResultWithMetaData_G3_NT.csv")
head(df)
df_va <- df |>
rename(
"Filename" = `File.Name`,
"P1" = `Projection..1`,
"P2" = `Projection..2`,
"P3" = `Projection..3`,
"Title" = `Manuscript.Title`,
"Year" = `Publication.Year`
) |>
filter(P1 * P2 * P3 != 0)
set.seed(27708) # For reproducibility
# Standardization
df_k <- df_va |>
mutate(
P_christ = scale(P1),
P_edu = scale(P2),
P_clothes = scale(P3)
) |>
select(Filename, P_christ, P_edu, P_clothes)
# Function to determine the optimal number of clusters using the elbow method
find_optimal_clusters <- function(data) {
if (is.vector(data)) {
data <- matrix(data, ncol = 1)
}
wss <- (nrow(data) - 1) * sum(apply(data, 2, var))
for (i in 2:15) {
wss[i] <- sum(kmeans(data, centers = i)$withinss)
}
return(wss)
}
# Determine the number of clusters for P1, P2, and P3
wss_P1 <- find_optimal_clusters(df_k$P_christ)
wss_P2 <- find_optimal_clusters(df_k$P_edu)
wss_P3 <- find_optimal_clusters(df_k$P_clothes)
# Plot the elbow method for each column
par(mfrow = c(1, 3))
plot(1:15, wss_P1, type = "b", xlab = "Number of Clusters", ylab = "Within groups sum of squares", main = "P1")
plot(1:15, wss_P2, type = "b", xlab = "Number of Clusters", ylab = "Within groups sum of squares", main = "P2")
plot(1:15, wss_P3, type = "b", xlab = "Number of Clusters", ylab = "Within groups sum of squares", main = "P3")
par(mfrow = c(1, 1))
# Apply K-means clustering
k <- 4
kmeans_P1 <- kmeans(matrix(df_k$P_christ, ncol = 1), centers = 3, nstart = 25)
kmeans_P2 <- kmeans(matrix(df_k$P_edu, ncol = 1), centers = 3, nstart = 25)
kmeans_P3 <- kmeans(matrix(df_k$P_clothes, ncol = 1), centers = 4, nstart = 25)
# Compute silhouette values
sil <- silhouette(kmeans_P1$cluster, dist(df_va$P1))
# Print silhouette summary
summary(sil)
# Add the cluster assignments to the original data frame
df_clustered_k <- df_k |>
mutate(cluster_P1 = kmeans_P1$cluster,
cluster_P2 = kmeans_P2$cluster,
cluster_P3 = kmeans_P3$cluster)
head(df_clustered_k)
# Visualize silhouette plot
fviz_silhouette(sil)
clustered <- df_clustered_k
# clustered <- df_gmm
merged_df <- df_va |>
left_join(clustered, by = "Filename")
merged_df <- merged_df |>
mutate(
cluster_P1 = as.character(cluster_P1),
cluster_P2 = as.character(cluster_P2),
cluster_P3 = as.character(cluster_P3)
) |>
select(Filename, P1, P2, P3, Title, Author, Year, cluster_P1, cluster_P2, cluster_P3)
head(merged_df)
# Below is the first projection
merged_df |>
ggplot(aes(x = P1, color = cluster_P1)) +
geom_density() +
geom_jitter(aes(y = 0), width = 0, height = 0.1, size = 0.5) +
theme_minimal() +
labs(title = "One-Dimensional Scatterplot",
x = "P_civility",
y = "") +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
custom_labels <- c("Very barbarous", "Relatively Neutral", "More civil")
custom_colors <- c("1" = "#66c2a5", "2" = "#fc8d62", "3" = "#8da0cb")
merged_df$cluster_P1 <- factor(merged_df$cluster_P1, levels = c("2", "3", "1"))
lines_df <- merged_df |> filter(Filename %in% c("A73849", "A19313", "A14803"))
caption_labels <- c("A73849" = "Donne", "A19313" = "Copland", "A14803" = "Waterhouse")
merged_df |>
ggplot(aes(x = P1, color = cluster_P1)) +
geom_density(aes(fill = cluster_P1), alpha = 0.2) +
geom_jitter(aes(y = 0), width = 0.1, height = 0.1, size = 1, alpha = 0.8) +
geom_vline(xintercept = 0, linetype = "dashed", color = "red3") +
geom_vline(data = lines_df, aes(xintercept = P1), color = "blue", linetype = "dotted", size = 0.5) +
annotate("text", x = lines_df$P1[lines_df$Filename == "A73849"], y = 1.5, label = "Donne", vjust = 1, color = "blue3") +
annotate("text", x = lines_df$P1[lines_df$Filename == "A19313"], y = 1.25, label = "Copland", vjust = 1, color = "blue3") +
annotate("text", x = lines_df$P1[lines_df$Filename == "A14803"], y = 1, label = "Waterhouse", vjust = 1, color = "blue3") +
annotate("text", x = 0.6, y = Inf, label = "Absolute Neutrality", vjust = 2, color = "red3") +
scale_color_manual(values = custom_colors, labels = custom_labels) +
scale_fill_manual(values = custom_colors, labels = custom_labels) +
theme_minimal(base_size = 15) +
labs(title = "Distribution of Stances on Civility of 'Natives' ",
x = "P_civility",
y = "") +
theme(
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_blank(),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5)
)
# Below is the second projection
merged_df |>
ggplot(aes(x = P2, color = cluster_P2)) +
geom_density() +
geom_jitter(aes(y = 0), width = 0, height = 0.1, size = 0.5) +
geom_vline(data = lines_df, aes(xintercept = P2), color = "blue", linetype = "dotted", size = 0.5) +
annotate("text", x = lines_df$P2[lines_df$Filename == "A73849"], y = 1.5, label = "Donne", vjust = 1, color = "blue3") +
annotate("text", x = lines_df$P2[lines_df$Filename == "A19313"], y = 1.25, label = "Copland", vjust = 1, color = "blue3") +
annotate("text", x = lines_df$P2[lines_df$Filename == "A14803"], y = 1, label = "Waterhouse", vjust = 1, color = "blue3") +
theme_minimal() +
labs(title = "One-Dimensional Scatterplot",
x = "P_salvation",
y = "") +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
# Below is the third projection
merged_df |>
ggplot(aes(x = P3, color = cluster_P3)) +
geom_density() +
geom_jitter(aes(y = 0), width = 0, height = 0.2, size = 0.5) +
geom_vline(data = lines_df, aes(xintercept = P3), color = "blue", linetype = "dotted", size = 0.5) +
annotate("text", x = lines_df$P3[lines_df$Filename == "A73849"], y = 1.5, label = "Donne", vjust = 1, color = "blue3") +
annotate("text", x = lines_df$P3[lines_df$Filename == "A19313"], y = 1.25, label = "Copland", vjust = 1, color = "blue3") +
annotate("text", x = lines_df$P3[lines_df$Filename == "A14803"], y = 1, label = "Waterhouse", vjust = 1, color = "blue3") +
theme_minimal() +
labs(title = "One-Dimensional Scatterplot",
x = "P_deprive",
y = "") +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
glimpse(merged_df)
merged_df |>
select(Author, Year, Filename, cluster_P1, cluster_P2, cluster_P3, P1, P2, P3) |>
filter(str_detect(Author, "Copland"))
#filter(P1<0.2413)
head(merged_df)
process_year <- function(year) {
# Remove square brackets
year <- str_replace_all(year, "\\[|\\]", "")
# Split by comma if there are multiple years
years <- str_split(year, ",\\s*")[[1]]
# Convert to numeric and take the minimum if there are multiple years
if (length(years) > 1) {
year <- min(as.numeric(years))
}
return(as.character(year))
}
cy_df <- merged_df |>
mutate(Year = as.numeric(sapply(Year, process_year))) |>
filter(Year < 1626 & Year >= 1606) |>
mutate(Year_Interval = cut(Year, breaks = seq(1606, 1627, by = 5), right = FALSE, labels = seq(1606, 1622, by = 5)))
percentage_p1 <- cy_df |>
group_by(Year_Interval) %>%
mutate(total_works = n()) %>%
group_by(Year_Interval, cluster_P1) %>%
summarise(count = n(), total_works = first(total_works)) %>%
mutate(percentage = (count / total_works) * 100) %>%
ungroup()
ggplot(percentage_p1, aes(x = Year_Interval, y = percentage, fill = as.factor(cluster_P1))) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Percentage of Works in Each Cluster Over 5-Year Intervals",
x = "Year Interval",
y = "Percentage",
fill = "Cluster") +
scale_fill_manual(values = c("1" = "blue", "2" = "green", "3" = "red"),
labels = c("1" = "Cluster 1", "2" = "Cluster 2", "3" = "Cluster 3")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(percentage_p1, aes(x = Year_Interval, y = percentage, color = as.factor(cluster_P1), group = cluster_P1)) +
geom_line(size = 1) +
geom_point() +
labs(title = "Percentage of Works in Each Cluster Over Time (5-Year Intervals)",
x = "Year Interval",
y = "Percentage",
color = "Cluster") +
scale_fill_manual(values = c("1" = "blue", "2" = "green", "3" = "red"),
labels = c("1" = "Cluster 1", "2" = "Cluster 2", "3" = "Cluster 3")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(percentage_p1, aes(x = as.numeric(as.character(Year_Interval)), y = percentage, fill = as.factor(cluster_P1), group = cluster_P1)) +
geom_density(stat = "identity", alpha = 0.6) +
labs(title = "Density of Works in Each Cluster Over Time",
x = "Year Interval",
y = "Percentage",
fill = "Cluster") +
scale_fill_manual(values = c("1" = "blue", "2" = "green", "3" = "red"),
labels = c("1" = "Cluster 1", "2" = "Cluster 2", "3" = "Cluster 3")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(percentage_p1, aes(x = Year_Interval, y = percentage, fill = as.factor(cluster_P1))) +
geom_bar(stat = "identity") +
labs(title = "Percentage of Works in Each Cluster Over 5-Year Intervals",
x = "Year Interval",
y = "Percentage",
fill = "Cluster") +
scale_fill_manual(values = c("1" = "blue", "2" = "green", "3" = "red"),
labels = c("1" = "Cluster 1", "2" = "Cluster 2", "3" = "Cluster 3")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
merged_df |>
ggplot(aes(x = P1, color = cluster_P1)) +
geom_density(aes(fill = cluster_P1), alpha = 0.1) +
geom_jitter(aes(y = 0), width = 0.1, height = 0.1, size = 1.5, alpha = 0.8) +
geom_vline(xintercept = 0, linetype = "dashed", color = "red3") +
geom_vline(data = lines_df, aes(xintercept = P1), color = "blue", linetype = "dotted", size = 0.5) +
annotate("text", x = lines_df$P1[lines_df$Filename == "A73849"], y = 1.5, label = "Donne", vjust = 1, color = "blue3") +
annotate("text", x = lines_df$P1[lines_df$Filename == "A19313"], y = 1.25, label = "Copland", vjust = 1, color = "blue3") +
annotate("text", x = lines_df$P1[lines_df$Filename == "A14803"], y = 1, label = "Waterhouse", vjust = 1, color = "blue3") +
annotate("text", x = 0.6, y = Inf, label = "Absolute Neutrality", vjust = 2, color = "red3") +
scale_color_manual(values = custom_colors, labels = custom_labels) +
scale_fill_manual(values = custom_colors, labels = custom_labels) +
theme_minimal(base_size = 15) +
labs(title = "Distribution of Stances on Civility of 'Natives' ",
x = "P_civility",
y = "") +
theme(
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_blank(),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5)
)
library(dplyr)
library(cluster)
library(tidyverse)
library(factoextra)
library(mclust)
library(stringr)
df = read.csv("../Projection/data/projectionResultWithMetaData_G2_HT.csv")
head(df)
df_va <- df |>
rename(
"Filename" = `File.Name`,
"P1" = `Projection..1`,
"P2" = `Projection..2`,
"P3" = `Projection..3`,
"Title" = `Manuscript.Title`,
"Year" = `Publication.Year`
) |>
filter(P1 * P2 * P3 != 0)
set.seed(27708) # For reproducibility
# Standardization
df_k <- df_va |>
mutate(
P_christ = scale(P1),
P_edu = scale(P2),
P_clothes = scale(P3)
) |>
select(Filename, P_christ, P_edu, P_clothes)
# Function to determine the optimal number of clusters using the elbow method
find_optimal_clusters <- function(data) {
if (is.vector(data)) {
data <- matrix(data, ncol = 1)
}
wss <- (nrow(data) - 1) * sum(apply(data, 2, var))
for (i in 2:15) {
wss[i] <- sum(kmeans(data, centers = i)$withinss)
}
return(wss)
}
# Determine the number of clusters for P1, P2, and P3
wss_P1 <- find_optimal_clusters(df_k$P_christ)
wss_P2 <- find_optimal_clusters(df_k$P_edu)
wss_P3 <- find_optimal_clusters(df_k$P_clothes)
# Plot the elbow method for each column
par(mfrow = c(1, 3))
plot(1:15, wss_P1, type = "b", xlab = "Number of Clusters", ylab = "Within groups sum of squares", main = "P1")
plot(1:15, wss_P2, type = "b", xlab = "Number of Clusters", ylab = "Within groups sum of squares", main = "P2")
plot(1:15, wss_P3, type = "b", xlab = "Number of Clusters", ylab = "Within groups sum of squares", main = "P3")
par(mfrow = c(1, 1))
# Apply K-means clustering
k <- 4
kmeans_P1 <- kmeans(matrix(df_k$P_christ, ncol = 1), centers = 3, nstart = 25)
kmeans_P2 <- kmeans(matrix(df_k$P_edu, ncol = 1), centers = 3, nstart = 25)
kmeans_P3 <- kmeans(matrix(df_k$P_clothes, ncol = 1), centers = 4, nstart = 25)
# Compute silhouette values
sil <- silhouette(kmeans_P1$cluster, dist(df_va$P1))
# Print silhouette summary
summary(sil)
# Add the cluster assignments to the original data frame
df_clustered_k <- df_k |>
mutate(cluster_P1 = kmeans_P1$cluster,
cluster_P2 = kmeans_P2$cluster,
cluster_P3 = kmeans_P3$cluster)
head(df_clustered_k)
# Visualize silhouette plot
fviz_silhouette(sil)
merged_df |>
select(Author, Year, Filename, cluster_P1, cluster_P2, cluster_P3, P1, P2, P3) |>
filter(str_detect(Author, "Waterhouse"))
merged_df |>
select(Author, Year, Filename, cluster_P1, cluster_P2, cluster_P3, P1, P2, P3) |>
filter(str_detect(Author, "Waterhouse"))
head(lines_df)
merged_df |>
select(Author, Year, Filename, cluster_P1, cluster_P2, cluster_P3, P1, P2, P3) |>
filter(str_detect(Author, "Donne"))
library(dplyr)
library(cluster)
library(tidyverse)
library(factoextra)
library(mclust)
library(stringr)
df = read.csv("../Projection/data/projectionResultWithMetaData_G2_HT.csv")
head(df)
df_va <- df |>
rename(
"Filename" = `File.Name`,
"P1" = `Projection..1`,
"P2" = `Projection..2`,
"P3" = `Projection..3`,
"Title" = `Manuscript.Title`,
"Year" = `Publication.Year`
) |>
filter(P1 * P2 * P3 != 0)
set.seed(27708) # For reproducibility
# Standardization
df_k <- df_va |>
mutate(
P_christ = scale(P1),
P_edu = scale(P2),
P_clothes = scale(P3)
) |>
select(Filename, P_christ, P_edu, P_clothes)
# Function to determine the optimal number of clusters using the elbow method
find_optimal_clusters <- function(data) {
if (is.vector(data)) {
data <- matrix(data, ncol = 1)
}
wss <- (nrow(data) - 1) * sum(apply(data, 2, var))
for (i in 2:15) {
wss[i] <- sum(kmeans(data, centers = i)$withinss)
}
return(wss)
}
# Determine the number of clusters for P1, P2, and P3
wss_P1 <- find_optimal_clusters(df_k$P_christ)
wss_P2 <- find_optimal_clusters(df_k$P_edu)
wss_P3 <- find_optimal_clusters(df_k$P_clothes)
# Plot the elbow method for each column
par(mfrow = c(1, 3))
plot(1:15, wss_P1, type = "b", xlab = "Number of Clusters", ylab = "Within groups sum of squares", main = "P1")
plot(1:15, wss_P2, type = "b", xlab = "Number of Clusters", ylab = "Within groups sum of squares", main = "P2")
plot(1:15, wss_P3, type = "b", xlab = "Number of Clusters", ylab = "Within groups sum of squares", main = "P3")
par(mfrow = c(1, 1))
# Apply K-means clustering
k <- 4
kmeans_P1 <- kmeans(matrix(df_k$P_christ, ncol = 1), centers = 3, nstart = 25)
kmeans_P2 <- kmeans(matrix(df_k$P_edu, ncol = 1), centers = 3, nstart = 25)
kmeans_P3 <- kmeans(matrix(df_k$P_clothes, ncol = 1), centers = 4, nstart = 25)
# Compute silhouette values
sil <- silhouette(kmeans_P1$cluster, dist(df_va$P1))
# Print silhouette summary
summary(sil)
# Add the cluster assignments to the original data frame
df_clustered_k <- df_k |>
mutate(cluster_P1 = kmeans_P1$cluster,
cluster_P2 = kmeans_P2$cluster,
cluster_P3 = kmeans_P3$cluster)
head(df_clustered_k)
# Visualize silhouette plot
fviz_silhouette(sil)
clustered <- df_clustered_k
# clustered <- df_gmm
merged_df <- df_va |>
left_join(clustered, by = "Filename")
merged_df <- merged_df |>
mutate(
cluster_P1 = as.character(cluster_P1),
cluster_P2 = as.character(cluster_P2),
cluster_P3 = as.character(cluster_P3)
) |>
select(Filename, P1, P2, P3, Title, Author, Year, cluster_P1, cluster_P2, cluster_P3)
head(merged_df)
# Below is the first projection
merged_df |>
ggplot(aes(x = P1, color = cluster_P1)) +
geom_density() +
geom_jitter(aes(y = 0), width = 0, height = 0.1, size = 0.5) +
theme_minimal() +
labs(title = "One-Dimensional Scatterplot",
x = "P_civility",
y = "") +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
custom_labels <- c("Very barbarous", "Relatively Neutral", "More civil")
custom_colors <- c("1" = "#66c2a5", "2" = "#fc8d62", "3" = "#8da0cb")
merged_df$cluster_P1 <- factor(merged_df$cluster_P1, levels = c("2", "3", "1"))
lines_df <- merged_df |> filter(Filename %in% c("A73849", "A19313", "A14803"))
head(lines_df)
caption_labels <- c("A73849" = "Donne", "A19313" = "Copland", "A14803" = "Waterhouse")
merged_df |>
ggplot(aes(x = P1, color = cluster_P1)) +
geom_density(aes(fill = cluster_P1), alpha = 0.1) +
geom_jitter(aes(y = 0), width = 0.1, height = 0.1, size = 1.5, alpha = 0.8) +
geom_vline(xintercept = 0, linetype = "dashed", color = "red3") +
geom_vline(data = lines_df, aes(xintercept = P1), color = "blue", linetype = "dotted", size = 0.5) +
annotate("text", x = lines_df$P1[lines_df$Filename == "A73849"], y = 1.5, label = "Donne", vjust = 1, color = "blue3") +
annotate("text", x = lines_df$P1[lines_df$Filename == "A19313"], y = 1.25, label = "Copland", vjust = 1, color = "blue3") +
annotate("text", x = lines_df$P1[lines_df$Filename == "A14803"], y = 1, label = "Waterhouse", vjust = 1, color = "blue3") +
annotate("text", x = 0.6, y = Inf, label = "Absolute Neutrality", vjust = 2, color = "red3") +
scale_color_manual(values = custom_colors, labels = custom_labels) +
scale_fill_manual(values = custom_colors, labels = custom_labels) +
theme_minimal(base_size = 15) +
labs(title = "Distribution of Stances on Civility of 'Natives' ",
x = "P_civility",
y = "") +
theme(
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_blank(),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5)
)
# Below is the second projection
merged_df |>
ggplot(aes(x = P2, color = cluster_P2)) +
geom_density() +
geom_jitter(aes(y = 0), width = 0, height = 0.1, size = 0.5) +
geom_vline(data = lines_df, aes(xintercept = P2), color = "blue", linetype = "dotted", size = 0.5) +
annotate("text", x = lines_df$P2[lines_df$Filename == "A73849"], y = 1.5, label = "Donne", vjust = 1, color = "blue3") +
annotate("text", x = lines_df$P2[lines_df$Filename == "A19313"], y = 1.25, label = "Copland", vjust = 1, color = "blue3") +
annotate("text", x = lines_df$P2[lines_df$Filename == "A14803"], y = 1, label = "Waterhouse", vjust = 1, color = "blue3") +
theme_minimal() +
labs(title = "One-Dimensional Scatterplot",
x = "P_salvation",
y = "") +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
# Below is the third projection
merged_df |>
ggplot(aes(x = P3, color = cluster_P3)) +
geom_density() +
geom_jitter(aes(y = 0), width = 0, height = 0.2, size = 0.5) +
geom_vline(data = lines_df, aes(xintercept = P3), color = "blue", linetype = "dotted", size = 0.5) +
annotate("text", x = lines_df$P3[lines_df$Filename == "A73849"], y = 1.5, label = "Donne", vjust = 1, color = "blue3") +
annotate("text", x = lines_df$P3[lines_df$Filename == "A19313"], y = 1.25, label = "Copland", vjust = 1, color = "blue3") +
annotate("text", x = lines_df$P3[lines_df$Filename == "A14803"], y = 1, label = "Waterhouse", vjust = 1, color = "blue3") +
theme_minimal() +
labs(title = "One-Dimensional Scatterplot",
x = "P_deprive",
y = "") +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
glimpse(merged_df)
merged_df |>
select(Author, Year, Filename, cluster_P1, cluster_P2, cluster_P3, P1, P2, P3) |>
filter(str_detect(Author, "Donne"))
#filter(P1<0.2413)
merged_df |>
select(Author, Year, Filename, cluster_P1, cluster_P2, cluster_P3, P1, P2, P3) |>
filter(str_detect(Author, "Waterhouse"))

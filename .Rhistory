size = 0.6,
show.legend = FALSE
) +
geom_text(
data = annotations,
aes(x = x_pos, y = y_pos, label = label, color = factor(cluster_P1)),
vjust = 1,
show.legend = FALSE,
family = "Times New Roman",
fontface = "bold",
angle = -90
) +
annotate(
"text", x = -0.25, y = Inf,
label = "Absolute\n Neutrality",
vjust = 1, color = "red3",
family = "Times New Roman",
fontface = "bold"
) +
scale_color_manual(values = custom_colors, labels = custom_labels, name = "Clusters") +
scale_fill_manual(values = custom_colors, labels = custom_labels, name = "Clusters") +
scale_alpha_identity() +
scale_x_continuous(limits = c(-0.3, 3.2)) +
theme_minimal(base_size = 12) +
labs(
title = 'Distribution of Connotations of "Virginia" \n on Money-Christ Dichotomy',
x = 'Note: the more rightward, the more monetary is the connotation of "Virginia"',
y = ""
) +
theme(
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_blank(),
legend.position = "top",
legend.title = element_blank(),
legend.text = element_text(
size = 10, family = "Times New Roman"
),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(
size = 18, hjust = 0.5, margin = margin(b = 20), family = "Times New Roman",
face = "bold"
),
text = element_text(family = "Times New Roman")
)
merged_df |>
ggplot(aes(x = P1, text = paste("Author:", Author, "<br>Filename:", Filename, "<br>Year:", Year), color = factor(cluster_P1))) +
geom_density(data = filtered_merged_df, aes(x = P1, fill = factor(cluster_P1)), alpha = 0.05) +
geom_jitter(
data = remaining_points,
aes(x = P1, y = 0, color = factor(cluster_P1)),
width = 0,
height = 0.1,
size = 1.5
) +
geom_jitter(
data = annotated_points,
aes(x = P1, y = 0, color = factor(cluster_P1)),
width = 0,
height = 0.1,
size = 1.5
) +
geom_vline(
xintercept = 0,
linetype = "dashed",
color = "red3",
show.legend = FALSE,
size = 0.7
) +
geom_vline(
data = lines_df,
aes(xintercept = P1, color = factor(cluster_P1)),
linetype = "dotted",
size = 0.6,
show.legend = FALSE
) +
geom_text(
data = annotations,
aes(x = x_pos, y = y_pos, label = label, color = factor(cluster_P1)),
vjust = 1,
show.legend = FALSE,
family = "Times New Roman",
fontface = "bold",
angle = -90
) +
annotate(
"text", x = -0.25, y = Inf,
label = "Absolute\n Neutrality",
vjust = 1, color = "red3",
family = "Times New Roman",
fontface = "bold"
) +
scale_color_manual(values = custom_colors, labels = custom_labels, name = "Clusters") +
scale_fill_manual(values = custom_colors, labels = custom_labels, name = "Clusters") +
scale_x_continuous(limits = c(-0.3, 3.2)) +
theme_minimal(base_size = 12) +
labs(
title = 'Distribution of Connotations of "Virginia" \n on Money-Christ Dichotomy',
x = 'Note: the more rightward, the more monetary is the connotation of "Virginia"',
y = ""
) +
theme(
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_blank(),
legend.position = "top",
legend.title = element_blank(),
legend.text = element_text(
size = 10, family = "Times New Roman"
),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(
size = 18, hjust = 0.5, margin = margin(b = 20), family = "Times New Roman",
face = "bold"
),
text = element_text(family = "Times New Roman")
)
# Load relevant packages for analysis
library(dplyr)
library(cluster)
library(tidyverse)
library(factoextra)
library(mclust)
library(stringr)
# Read the CSV file
df = read.csv("../Projection/data/projectionResultWithMetaData_G1_VA.csv")
df_va <- df |>
rename(
"Filename" = `File.Name`,
"P1" = `Projection..1`,
"P2" = `Projection..2`,
"P3" = `Projection..3`,
"Title" = `Manuscript.Title`,
"Year" = `Publication.Year`
) |>
filter(P1 * P2 * P3 != 0)
# K-means Clustering
set.seed(27708) # For reproducibility
# Standardization
df_k <- df_va |>
mutate(
P1_scaled = scale(P1),
P2_scaled = scale(P2),
P3_scaled = scale(P3)
) |>
select(Filename, P1_scaled, P2_scaled, P3_scaled)
# Define the number of clusters
k_1 <- 3
k_2 <- 3
k_3 <- 4
kmeans_P1 <- kmeans(matrix(df_k$P1_scaled, ncol = 1), centers = k_1, nstart = 25)
kmeans_P2 <- kmeans(matrix(df_k$P2_scaled, ncol = 1), centers = k_2, nstart = 25)
kmeans_P3 <- kmeans(matrix(df_k$P3_scaled, ncol = 1), centers = k_3, nstart = 25)
# Add the cluster assignments to the original data frame
df_clustered_k <- df_k |>
mutate(cluster_P1 = kmeans_P1$cluster,
cluster_P2 = kmeans_P2$cluster,
cluster_P3 = kmeans_P3$cluster)
# Check the number of points in each cluster
cluster_counts <- df_clustered_k %>%
count(cluster_P1)
print(cluster_counts)
# Merge data for visualization
merged_df <- df_va |>
left_join(df_clustered_k, by = "Filename")
merged_df <- merged_df |>
mutate(
cluster_P1 = as.character(cluster_P1),
cluster_P2 = as.character(cluster_P2),
cluster_P3 = as.character(cluster_P3)
) |>
select(Filename, P1, P2, P3, Title, Author, Year, cluster_P1, cluster_P2, cluster_P3)
# Filter the dataset for the specified filenames
lines_df <- merged_df |> filter(Filename %in% c("A73849", "A19313", "A14803"))
# Create annotations for specific points
annotations <- lines_df |>
mutate(label = case_when(
Filename == "A73849" ~ "J. Donne",
Filename == "A19313" ~ "P. Copland",
Filename == "A14803" ~ "E. Waterhouse"
),
x_pos = case_when(
Filename == "A73849" ~ P1 - 0.02,
Filename == "A19313" ~ P1 + 0.08,
Filename == "A14803" ~ P1 + 0.08
),
y_pos = case_when(
Filename == "A73849" ~ 1.3,
Filename == "A19313" ~ 0.7,
Filename == "A14803" ~ 1
))
merged_df$cluster_P1 <- factor(merged_df$cluster_P1, levels = c(1, 2, 3))
# Define custom labels and colors for the clusters
custom_labels <- c("1" = "More Religious-driven", "2" = "Relatively Neutral", "3" = "Very Financial-driven")
custom_colors <- c("1" = "#66c2a5", "2" = "#fc8d62", "3" = "#8da0cb")
annotated_points <- merged_df %>% filter(Filename %in% c("A73849", "A19313", "A14803"))
remaining_points <- merged_df %>% filter(!Filename %in% c("A73849", "A19313", "A14803"))
# Create the plot
plot <- ggplot() +
geom_density(
data = merged_df,
aes(x = P1, fill = factor(cluster_P1)),
alpha = 0.05
) +
geom_jitter(
data = remaining_points,
aes(x = P1, y = 0, color = factor(cluster_P1)),
width = 0,
height = 0.1,
size = 1.5
) +
geom_jitter(
data = annotated_points,
aes(x = P1, y = 0, color = factor(cluster_P1)),
width = 0,
height = 0.1,
size = 1.5
) +
geom_vline(
xintercept = 0,
linetype = "dashed",
color = "red3",
show.legend = FALSE,
size = 0.7
) +
geom_vline(
data = lines_df,
aes(xintercept = P1, color = factor(cluster_P1)),
linetype = "dotted",
size = 0.6,
show.legend = FALSE
) +
geom_text(
data = annotations,
aes(x = x_pos, y = y_pos, label = label, color = factor(cluster_P1)),
vjust = 1,
show.legend = FALSE,
family = "Times New Roman",
fontface = "bold",
angle = -90
) +
annotate(
"text", x = -0.25, y = Inf,
label = "Absolute\n Neutrality",
vjust = 1, color = "red3",
family = "Times New Roman",
fontface = "bold"
) +
scale_color_manual(values = custom_colors, labels = custom_labels, name = "Clusters") +
scale_fill_manual(values = custom_colors, labels = custom_labels, name = "Clusters") +
scale_x_continuous(limits = c(-0.3, 3.2)) +
theme_minimal(base_size = 12) +
labs(
title = 'Distribution of Connotations of "Virginia" \n on Money-Christ Dichotomy',
x = 'Note: the more rightward, the more monetary is the connotation of "Virginia"',
y = ""
) +
theme(
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_blank(),
legend.position = "top",
legend.title = element_blank(),
legend.text = element_text(
size = 10, family = "Times New Roman"
),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(
size = 18, hjust = 0.5, margin = margin(b = 20), family = "Times New Roman",
face = "bold"
),
text = element_text(family = "Times New Roman")
)
print(plot)
df_clustered_k %>%
count(cluster_P1)
```
# Load relevant packages for analysis
library(dplyr)
library(cluster)
library(tidyverse)
library(factoextra)
library(mclust)
library(stringr)
library(plotly)
# Read the CSV file
df = read.csv("../Projection/data/projectionResultWithMetaData_G1_VA.csv")
df_va <- df |>
rename(
"Filename" = `File.Name`,
"P1" = `Projection..1`,
"P2" = `Projection..2`,
"P3" = `Projection..3`,
"Title" = `Manuscript.Title`,
"Year" = `Publication.Year`
) |>
filter(P1 * P2 * P3 != 0)
# K-means Clustering
set.seed(27708) # For reproducibility
# Standardization
df_k <- df_va |>
mutate(
P1_scaled = scale(P1),
P2_scaled = scale(P2),
P3_scaled = scale(P3)
) |>
select(Filename, P1_scaled, P2_scaled, P3_scaled)
# Define the number of clusters
k_1 <- 3
k_2 <- 3
k_3 <- 4
kmeans_P1 <- kmeans(matrix(df_k$P1_scaled, ncol = 1), centers = k_1, nstart = 25)
kmeans_P2 <- kmeans(matrix(df_k$P2_scaled, ncol = 1), centers = k_2, nstart = 25)
kmeans_P3 <- kmeans(matrix(df_k$P3_scaled, ncol = 1), centers = k_3, nstart = 25)
# Add the cluster assignments to the original data frame
df_clustered_k <- df_k |>
mutate(cluster_P1 = kmeans_P1$cluster,
cluster_P2 = kmeans_P2$cluster,
cluster_P3 = kmeans_P3$cluster)
# Merge data for visualization
merged_df <- df_va |>
left_join(df_clustered_k, by = "Filename")
merged_df <- merged_df |>
mutate(
cluster_P1 = as.character(cluster_P1),
cluster_P2 = as.character(cluster_P2),
cluster_P3 = as.character(cluster_P3)
) |>
select(Filename, P1, P2, P3, Title, Author, Year, cluster_P1, cluster_P2, cluster_P3)
# Filter the dataset for the specified filenames
lines_df <- merged_df |> filter(Filename %in% c("A73849", "A19313", "A14803"))
# Create annotations for specific points
annotations <- lines_df |>
mutate(label = case_when(
Filename == "A73849" ~ "J. Donne",
Filename == "A19313" ~ "P. Copland",
Filename == "A14803" ~ "E. Waterhouse"
),
x_pos = case_when(
Filename == "A73849" ~ P1 - 0.02,
Filename == "A19313" ~ P1 + 0.08,
Filename == "A14803" ~ P1 + 0.08
),
y_pos = case_when(
Filename == "A73849" ~ 1.3,
Filename == "A19313" ~ 0.7,
Filename == "A14803" ~ 1
))
merged_df$cluster_P1 <- factor(merged_df$cluster_P1, levels = c(1, 2, 3))
filtered_merged_df <- merged_df %>%
group_by(cluster_P1) %>%
filter(n() > 1)
# Define custom labels and colors for the clusters
custom_labels <- c("1" = "More Religious-driven", "2" = "Relatively Neutral", "3" = "Very Financial-driven")
custom_colors <- c("1" = "#66c2a5", "2" = "#fc8d62", "3" = "#8da0cb")
annotated_points <- merged_df %>% filter(Filename %in% c("A73849", "A19313", "A14803"))
remaining_points <- merged_df %>% filter(!Filename %in% c("A73849", "A19313", "A14803"))
# Create a plotly scatter plot
plot <- merged_df |>
ggplot(aes(x = P1, text = paste("Author:", Author, "<br>Filename:", Filename, "<br>Year:", Year), color = factor(cluster_P1))) +
geom_density(data = filtered_merged_df, aes(x = P1, fill = factor(cluster_P1)), alpha = 0.05) +
geom_jitter(
data = remaining_points,
aes(x = P1, y = 0, color = factor(cluster_P1)),
width = 0,
height = 0.1,
size = 1.5
) +
geom_jitter(
data = annotated_points,
aes(x = P1, y = 0, color = factor(cluster_P1)),
width = 0,
height = 0.1,
size = 1.5
) +
geom_vline(
xintercept = 0,
linetype = "dashed",
color = "red3",
show.legend = FALSE,
size = 0.7
) +
geom_vline(
data = lines_df,
aes(xintercept = P1, color = factor(cluster_P1)),
linetype = "dotted",
size = 0.6,
show.legend = FALSE
) +
geom_text(
data = annotations,
aes(x = x_pos, y = y_pos, label = label, color = factor(cluster_P1)),
vjust = 1,
show.legend = FALSE,
family = "Times New Roman",
fontface = "bold",
angle = -90
) +
annotate(
"text", x = -0.25, y = Inf,
label = "Absolute\n Neutrality",
vjust = 1, color = "red3",
family = "Times New Roman",
fontface = "bold"
) +
scale_color_manual(values = custom_colors, labels = custom_labels, name = "Clusters") +
scale_fill_manual(values = custom_colors, labels = custom_labels, name = "Clusters") +
scale_x_continuous(limits = c(-0.3, 3.2)) +
theme_minimal(base_size = 12) +
labs(
title = 'Distribution of Connotations of "Virginia" \n on Money-Christ Dichotomy',
x = 'Note: the more rightward, the more monetary is the connotation of "Virginia"',
y = ""
) +
theme(
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_blank(),
legend.position = "top",
legend.title = element_blank(),
legend.text = element_text(
size = 10, family = "Times New Roman"
),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(
size = 18, hjust = 0.5, margin = margin(b = 20), family = "Times New Roman",
face = "bold"
),
text = element_text(family = "Times New Roman")
)
ggplotly(plot, tooltip = "text")
df_clustered_k %>%
count(cluster_P1)
```
df_clustered_k %>%
count(cluster_P1)
```
count(cluste
exit
count(cluster
_k)
df_clustered_k |>
count(cluster_P1)
```
glimpse(df_clustered_k)
```
install.packages("janitor")
# Read the CSV file and clean column names
df = read.csv("../Projection/data/projectionResultWithMetaData_G1_VA.csv") %>%
clean_names()
library(janitor)
# Read the CSV file and clean column names
df = read.csv("../Projection/data/projectionResultWithMetaData_G1_VA.csv") %>%
clean_names()
glimse(df)
glimpse(df)
glimpse(df)
install.packages("ggiraph")
runApp('Shiny')
runApp('Shiny')
runApp('Shiny')
runApp('Shiny')
runApp('Shiny')
runApp('Shiny')
runApp('Shiny')
runApp('Shiny')
runApp('Shiny')
runApp('Shiny')
runApp('Shiny')
runApp('Shiny')
runApp('Shiny')
runApp('Shiny')
runApp('Shiny')
runApp('Shiny')
runApp('Shiny')
runApp('Shiny')
runApp('Shiny')
runApp('Shiny')
runApp('Shiny')
runApp('Shiny')
print(paste("Current working directory:", getwd()))
runApp('Shiny')
print(paste("Current working directory:", getwd()))
module_files <- list.files("modules", full.names = TRUE)
print("Module files found:")
print(module_files)
module_files <- list.files("Shiny/modules", full.names = TRUE)
print("Module files found:")
print(module_files)
specific_module_path <- file.path("modules", "Virginia_Money–Christ_1.R")
print(paste("Specific module path:", specific_module_path))
cd Shiny
runApp('Shiny')
runApp('Shiny')
getwd()
setwd("/Users/lucasma/Documents/The States/ECBC/Code/ECBCData2024/Shiny")
getwd()
runApp()
setwd("~/Documents/The States/ECBC/Code/ECBCData2024/Shiny")
runApp()
runApp()
shiny::runApp('Shiny')
runApp('Shiny')
runApp('Shiny')

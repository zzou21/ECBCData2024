axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
#axis.text.x = element_blank(),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5)
)
merged_df |>
ggplot(aes(x = P1, color = factor(cluster_P1))) +
geom_density(aes(fill = factor(cluster_P1)), alpha = 0.1) +
geom_jitter(aes(y = 0, alpha = ifelse(Filename %in% c("A73849", "A19313", "A14803"), 1, 0.8)),
width = 0.1, height = 0.1, size = 1.5) +
geom_vline(xintercept = 0, linetype = "dashed", color = "red3", show.legend = FALSE) +
geom_vline(data = lines_df, aes(xintercept = P1, color = factor(cluster_P1)), linetype = "dotted", size = 0.5, show.legend = FALSE) +
geom_text(data = annotations, aes(x = P1 + 0.35, y = 1, label = label, color = factor(cluster_P1)), vjust = 1, show.legend = FALSE) +
annotate("text", x = 0.6, y = Inf, label = "Absolute Neutrality", vjust = 2, color = "red3") +
scale_color_manual(values = custom_colors, labels = custom_labels) +
scale_fill_manual(values = custom_colors, labels = custom_labels) +
scale_alpha_identity() +  # Use identity scale for alpha
theme_minimal(base_size = 15) +
labs(title = "Distribution of Stances on Civility of 'Natives' ",
x = "P_civility",
y = "") +
theme(
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
#axis.text.x = element_blank(),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5)
)
merged_df |>
ggplot(aes(x = P1, color = factor(cluster_P1))) +
geom_density(aes(fill = factor(cluster_P1)), alpha = 0.1) +
geom_jitter(aes(y = 0, alpha = ifelse(Filename %in% c("A73849", "A19313", "A14803"), 1, 0.8)),
width = 0.1, height = 0.1, size = 1.5) +
geom_vline(xintercept = 0, linetype = "dashed", color = "red3", show.legend = FALSE) +
geom_vline(data = lines_df, aes(xintercept = P1, color = factor(cluster_P1)), linetype = "dotted", size = 0.5, show.legend = FALSE) +
geom_text(data = annotations, aes(x = P1 + 0.35, y = 1, label = label, color = factor(cluster_P1)), vjust = 1, show.legend = FALSE) +
annotate("text", x = 0.6, y = Inf, label = "Absolute Neutrality", vjust = 2, color = "red3") +
scale_color_manual(values = custom_colors, labels = custom_labels) +
scale_fill_manual(values = custom_colors, labels = custom_labels) +
scale_alpha_identity() +  # Use identity scale for alpha
theme_minimal(base_size = 15) +
labs(title = "Distribution of Stances on Civility of 'Natives' ",
x = "P_civility",
y = "") +
theme(
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
#axis.text.x = element_blank(),
legend.position = "top",
legend.title = element_blank(),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5)
)
ggplot() +
geom_density(data = merged_df, aes(x = P1, fill = factor(cluster_P1)), alpha = 0.1) +
geom_jitter(data = remaining_points, aes(x = P1, y = 0, color = factor(cluster_P1), alpha = 0.8),
width = 0.1, height = 0.1, size = 1.5) +
geom_jitter(data = annotated_points, aes(x = P1, y = 0, color = factor(cluster_P1), alpha = 1),
width = 0.1, height = 0.1, size = 1.5) +
geom_vline(xintercept = 0, linetype = "dashed", color = "red3", show.legend = FALSE) +
geom_vline(data = lines_df, aes(xintercept = P1, color = factor(cluster_P1)), linetype = "dotted", size = 0.5, show.legend = FALSE) +
geom_text(data = annotations, aes(x = P1 + 0.35, y = 1, label = label, color = factor(cluster_P1)), vjust = 1, show.legend = FALSE) +
annotate("text", x = 0.6, y = Inf, label = "Absolute Neutrality", vjust = 2, color = "red3") +
scale_color_manual(values = custom_colors, labels = custom_labels) +
scale_fill_manual(values = custom_colors, labels = custom_labels) +
scale_alpha_identity() +  # Use identity scale for alpha
theme_minimal(base_size = 15) +
labs(title = "Distribution of Stances on Civility of 'Natives' ",
x = "P_civility",
y = "") +
theme(
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_blank(),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5)
)
annotated_points <- merged_df %>% filter(Filename %in% c("A73849", "A19313", "A14803"))
remaining_points <- merged_df %>% filter(!Filename %in% c("A73849", "A19313", "A14803"))
ggplot() +
geom_density(data = merged_df, aes(x = P1, fill = factor(cluster_P1)), alpha = 0.1) +
geom_jitter(data = remaining_points, aes(x = P1, y = 0, color = factor(cluster_P1), alpha = 0.8),
width = 0.1, height = 0.1, size = 1.5) +
geom_jitter(data = annotated_points, aes(x = P1, y = 0, color = factor(cluster_P1), alpha = 1),
width = 0.1, height = 0.1, size = 1.5) +
geom_vline(xintercept = 0, linetype = "dashed", color = "red3", show.legend = FALSE) +
geom_vline(data = lines_df, aes(xintercept = P1, color = factor(cluster_P1)), linetype = "dotted", size = 0.5, show.legend = FALSE) +
geom_text(data = annotations, aes(x = P1 + 0.35, y = 1, label = label, color = factor(cluster_P1)), vjust = 1, show.legend = FALSE) +
annotate("text", x = 0.6, y = Inf, label = "Absolute Neutrality", vjust = 2, color = "red3") +
scale_color_manual(values = custom_colors, labels = custom_labels) +
scale_fill_manual(values = custom_colors, labels = custom_labels) +
scale_alpha_identity() +  # Use identity scale for alpha
theme_minimal(base_size = 15) +
labs(title = "Distribution of Stances on Civility of 'Natives' ",
x = "P_civility",
y = "") +
theme(
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_blank(),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5)
)
merged_df |>
ggplot(aes(x = P1, color = factor(cluster_P1))) +
geom_density(aes(fill = factor(cluster_P1)), alpha = 0.1) +
geom_jitter(aes(y = 0, alpha = ifelse(Filename %in% c("A73849", "A19313", "A14803"), 1, 0.8)),
width = 0.1, height = 0.1, size = 1.5) +
geom_vline(xintercept = 0, linetype = "dashed", color = "red3", show.legend = FALSE) +
geom_vline(data = lines_df, aes(xintercept = P1, color = factor(cluster_P1)), linetype = "dotted", size = 0.5, show.legend = FALSE) +
geom_text(data = annotations, aes(x = P1 + 0.35, y = 1, label = label, color = factor(cluster_P1)), vjust = 1, show.legend = FALSE) +
annotate("text", x = 0.6, y = Inf, label = "Absolute Neutrality", vjust = 2, color = "red3") +
scale_color_manual(values = custom_colors, labels = custom_labels) +
scale_fill_manual(values = custom_colors, labels = custom_labels) +
scale_alpha_identity() +  # Use identity scale for alpha
theme_minimal(base_size = 15) +
labs(title = "Distribution of Stances on Civility of 'Natives' ",
x = "P_civility",
y = "") +
theme(
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_blank(),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5)
)
annotated_points <- merged_df %>% filter(Filename %in% c("A73849", "A19313", "A14803"))
remaining_points <- merged_df %>% filter(!Filename %in% c("A73849", "A19313", "A14803"))
merged_df |>
ggplot(aes(x = P1, color = factor(cluster_P1))) +
geom_density(aes(fill = factor(cluster_P1)), alpha = 0.1) +
geom_jitter(
data = remaining_points,
aes(x = P1, y = 0, color = factor(cluster_P1), alpha = 0.8),
width = 0.1,
height = 0.1,
size = 1.5
) +
geom_jitter(
data = annotated_points,
aes(x = P1, y = 0, color = factor(cluster_P1), alpha = 1),
width = 0.1,
height = 0.1,
size = 1.5
)+
geom_vline(
xintercept = 0,
linetype = "dashed",
color = "red3",
show.legend = FALSE
) +
geom_vline(data = lines_df, aes(xintercept = P1, color = factor(cluster_P1)), linetype = "dotted", size = 0.5, show.legend = FALSE) +
geom_text(data = annotations, aes(x = P1 + 0.35, y = 1, label = label, color = factor(cluster_P1)), vjust = 1, show.legend = FALSE) +
annotate("text", x = 0.6, y = Inf, label = "Absolute Neutrality", vjust = 2, color = "red3") +
scale_color_manual(values = custom_colors, labels = custom_labels) +
scale_fill_manual(values = custom_colors, labels = custom_labels) +
scale_alpha_identity() +  # Use identity scale for alpha
theme_minimal(base_size = 15) +
labs(title = "Distribution of Stances on Civility of 'Natives' ",
x = "P_civility",
y = "") +
theme(
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_blank(),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5)
)
merged_df |>
ggplot(aes(x = P1, color = factor(cluster_P1))) +
geom_density(aes(fill = factor(cluster_P1)), alpha = 0.1) +
geom_jitter(
data = remaining_points,
aes(x = P1, y = 0, color = factor(cluster_P1), alpha = 0.2),
width = 0.1,
height = 0.1,
size = 1.5
) +
geom_jitter(
data = annotated_points,
aes(x = P1, y = 0, color = factor(cluster_P1), alpha = 1),
width = 0.1,
height = 0.1,
size = 1.5
)+
geom_vline(
xintercept = 0,
linetype = "dashed",
color = "red3",
show.legend = FALSE
) +
geom_vline(data = lines_df, aes(xintercept = P1, color = factor(cluster_P1)), linetype = "dotted", size = 0.5, show.legend = FALSE) +
geom_text(data = annotations, aes(x = P1 + 0.35, y = 1, label = label, color = factor(cluster_P1)), vjust = 1, show.legend = FALSE) +
annotate("text", x = 0.6, y = Inf, label = "Absolute Neutrality", vjust = 2, color = "red3") +
scale_color_manual(values = custom_colors, labels = custom_labels) +
scale_fill_manual(values = custom_colors, labels = custom_labels) +
scale_alpha_identity() +  # Use identity scale for alpha
theme_minimal(base_size = 15) +
labs(title = "Distribution of Stances on Civility of 'Natives' ",
x = "P_civility",
y = "") +
theme(
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_blank(),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5)
)
glimpse(lines_df)
merged_df |>
filter(str_detect(Filename, "A19313"))
glimpse(lines_df)
merged_df |>
filter(str_detect(Filename, "A14803"))
glimpse(lines_df)
merged_df |>
ggplot(aes(x = P1, color = factor(cluster_P1))) +
geom_density(aes(fill = factor(cluster_P1)), alpha = 0.1) +
geom_jitter(
data = remaining_points,
aes(x = P1, y = 0, color = factor(cluster_P1), alpha = 0.2),
width = 0,
height = 0.1,
size = 1.5
) +
geom_jitter(
data = annotated_points,
aes(x = P1, y = 0, color = factor(cluster_P1), alpha = 1),
width = 0,
height = 0.1,
size = 1.5
)+
geom_vline(
xintercept = 0,
linetype = "dashed",
color = "red3",
show.legend = FALSE
) +
geom_vline(data = lines_df, aes(xintercept = P1, color = factor(cluster_P1)), linetype = "dotted", size = 0.5, show.legend = FALSE) +
geom_text(data = annotations, aes(x = P1 + 0.35, y = 1, label = label, color = factor(cluster_P1)), vjust = 1, show.legend = FALSE) +
annotate("text", x = 0.6, y = Inf, label = "Absolute Neutrality", vjust = 2, color = "red3") +
scale_color_manual(values = custom_colors, labels = custom_labels) +
scale_fill_manual(values = custom_colors, labels = custom_labels) +
scale_alpha_identity() +
theme_minimal(base_size = 15) +
labs(title = "Distribution of Stances on Civility of 'Natives' ",
x = "P_civility",
y = "") +
theme(
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_blank(),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5)
)
library(dplyr)
library(cluster)
library(tidyverse)
library(factoextra)
library(mclust)
library(stringr)
df = read.csv("../Projection/data/projectionResultWithMetaData_G2_VA.csv")
head(df)
df_va <- df |>
rename(
"Filename" = `File.Name`,
"P1" = `Projection..1`,
"P2" = `Projection..2`,
"P3" = `Projection..3`,
"Title" = `Manuscript.Title`,
"Year" = `Publication.Year`
) |>
filter(P1 * P2 * P3 != 0)
set.seed(27708) # For reproducibility
# Standardization
df_k <- df_va |>
mutate(
P1_scaled = scale(P1),
P2_scaled = scale(P2),
P3_scaled = scale(P3)
) |>
select(Filename, P1_scaled, P2_scaled, P3_scaled)
# Function to determine the optimal number of clusters using the elbow method
find_optimal_clusters <- function(data) {
if (is.vector(data)) {
data <- matrix(data, ncol = 1)
}
wss <- (nrow(data) - 1) * sum(apply(data, 2, var))
for (i in 2:15) {
wss[i] <- sum(kmeans(data, centers = i)$withinss)
}
return(wss)
}
# Determine the number of clusters for P1, P2, and P3
wss_P1 <- find_optimal_clusters(df_k$P1_scaled)
wss_P2 <- find_optimal_clusters(df_k$P2_scaled)
wss_P3 <- find_optimal_clusters(df_k$P3_scaled)
# Plot the elbow method for each column
par(mfrow = c(1, 3))
plot(1:15, wss_P1, type = "b", xlab = "Number of Clusters", ylab = "Within groups sum of squares", main = "P1")
plot(1:15, wss_P2, type = "b", xlab = "Number of Clusters", ylab = "Within groups sum of squares", main = "P2")
plot(1:15, wss_P3, type = "b", xlab = "Number of Clusters", ylab = "Within groups sum of squares", main = "P3")
par(mfrow = c(1, 1))
# If anyone were to change the number of clusters for the three clusterings, please change it here:
k_1 <- 3
k_2 <- 3
k_3 <- 4
kmeans_P1 <- kmeans(matrix(df_k$P1_scaled, ncol = 1), centers = k_1, nstart = 25)
kmeans_P2 <- kmeans(matrix(df_k$P2_scaled, ncol = 1), centers = k_2, nstart = 25)
kmeans_P3 <- kmeans(matrix(df_k$P3_scaled, ncol = 1), centers = k_3, nstart = 25)
# Add the cluster assignments to the original data frame
df_clustered_k <- df_k |>
mutate(cluster_P1 = kmeans_P1$cluster,
cluster_P2 = kmeans_P2$cluster,
cluster_P3 = kmeans_P3$cluster)
# Compute silhouette values
sil <- silhouette(kmeans_P1$cluster, dist(df_va$P1))
# Print silhouette summary
summary(sil)
# Visualize silhouette plot
fviz_silhouette(sil)
clustered <- df_clustered_k
merged_df <- df_va |>
left_join(clustered, by = "Filename")
merged_df <- merged_df |>
mutate(
cluster_P1 = as.character(cluster_P1),
cluster_P2 = as.character(cluster_P2),
cluster_P3 = as.character(cluster_P3)
) |>
select(Filename, P1, P2, P3, Title, Author, Year, cluster_P1, cluster_P2, cluster_P3)
# Filter the dataset for the specified filenames
lines_df <- merged_df |> filter(Filename %in% c("A73849", "A19313", "A14803"))
# Below is the first projection
merged_df |>
ggplot(aes(x = P1, color = cluster_P1)) +
geom_density() +
geom_jitter(aes(y = 0), width = 0, height = 0.1, size = 0.5) +
theme_minimal() +
labs(title = "One-Dimensional Scatterplot",
x = "P_civility",
y = "") +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
# Below is the second projection
merged_df |>
ggplot(aes(x = P2, color = cluster_P2)) +
geom_density() +
geom_jitter(aes(y = 0), width = 0, height = 0.1, size = 0.5) +
geom_vline(data = lines_df, aes(xintercept = P2), color = "blue", linetype = "dotted", size = 0.5) +
annotate("text", x = lines_df$P2[lines_df$Filename == "A73849"], y = 1.5, label = "Donne", vjust = 1, color = "blue3") +
annotate("text", x = lines_df$P2[lines_df$Filename == "A19313"], y = 1.25, label = "Copland", vjust = 1, color = "blue3") +
annotate("text", x = lines_df$P2[lines_df$Filename == "A14803"], y = 1, label = "Waterhouse", vjust = 1, color = "blue3") +
theme_minimal() +
labs(title = "One-Dimensional Scatterplot",
x = "P_salvation",
y = "") +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
# Below is the third projection
merged_df |>
ggplot(aes(x = P3, color = cluster_P3)) +
geom_density() +
geom_jitter(aes(y = 0), width = 0, height = 0.2, size = 0.5) +
geom_vline(data = lines_df, aes(xintercept = P3), color = "blue", linetype = "dotted", size = 0.5) +
annotate("text", x = lines_df$P3[lines_df$Filename == "A73849"], y = 1.5, label = "Donne", vjust = 1, color = "blue3") +
annotate("text", x = lines_df$P3[lines_df$Filename == "A19313"], y = 1.25, label = "Copland", vjust = 1, color = "blue3") +
annotate("text", x = lines_df$P3[lines_df$Filename == "A14803"], y = 1, label = "Waterhouse", vjust = 1, color = "blue3") +
theme_minimal() +
labs(title = "One-Dimensional Scatterplot",
x = "P_deprive",
y = "") +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
merged_df |>
select(Author, Year, Filename, cluster_P1, cluster_P2, cluster_P3, P1, P2, P3) |>
filter(str_detect(Author, "Waterhouse"))
#filter(P1<0.2413)
annotations <- lines_df |>
mutate(label = case_when(
Filename == "A73849" ~ "Donne",
Filename == "A19313" ~ "Copland",
Filename == "A14803" ~ "Waterhouse"
),
x_pos = case_when(
Filename == "A73849" ~ P1 - 0.12,
Filename == "A19313" ~ P1 + 0.15,
Filename == "A14803" ~ P1 + 0.2
),
y_pos = case_when(
Filename == "A73849" ~ 1.3,
Filename == "A19313" ~ 0.9,
Filename == "A14803" ~ 1
))
merged_df$cluster_P1 <- factor(merged_df$cluster_P1, levels = c(3, 2, 1))
# Define custom labels and colors for the clusters
custom_labels <- c("1" = "Extremely Backward", "2" = "Quite Underdeveloped", "3" = "Somewhat Rural")
custom_colors <- c("1" = "#66c2a5", "2" = "#fc8d62", "3" = "#8da0cb")
annotated_points <- merged_df %>% filter(Filename %in% c("A73849", "A19313", "A14803"))
remaining_points <- merged_df %>% filter(!Filename %in% c("A73849", "A19313", "A14803"))
glimpse(lines_df)
merged_df |>
filter(str_detect(Filename, "A14803"))
merged_df |>
ggplot(aes(x = P1, color = factor(cluster_P1))) +
geom_density(aes(fill = factor(cluster_P1)), alpha = 0.05) +
geom_jitter(
data = remaining_points,
aes(x = P1, y = 0, color = factor(cluster_P1), alpha = 0.15),
width = 0,
height = 0.1,
size = 1.5
) +
geom_jitter(
data = annotated_points,
aes(x = P1, y = 0, color = factor(cluster_P1), alpha = 1),
width = 0,
height = 0.1,
size = 1.5
)+
geom_vline(
xintercept = 0,
linetype = "dashed",
color = "red3",
show.legend = FALSE,
size = 0.7
) +
geom_vline(
data = lines_df,
aes(xintercept = P1, color = factor(cluster_P1)),
linetype = "dotted",
size = 0.6,
show.legend = FALSE
) +
geom_text(
data = annotations,
aes(x = x_pos, y = y_pos, label = label, color = factor(cluster_P1)),
vjust = 1,
show.legend = FALSE,
family = "Times New Roman",
fontface = "bold"
) +
annotate(
"text", x = 0.3, y = Inf,
label = "Absolute Neutrality",
vjust = 2, color = "red3",
family = "Times New Roman"
) +
scale_color_manual(values = custom_colors, labels = custom_labels, name = "Clusters") +
scale_fill_manual(values = custom_colors, labels = custom_labels, name = "Clusters") +
scale_alpha_identity() +
theme_minimal(base_size = 15) +
labs(
title = 'Distribution of Connotations of "Virginia" \n on Plantation - London Dichotomy',
x = 'Note: the more rightward, the more rural is the connotation of "Virginia"',
y = ""
) +
theme(
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_blank(),
legend.position = "top",
legend.title = element_blank(),
legend.text = element_text(
size = 10, family = "Times New Roman"
),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(
size = 20, hjust = 0.5, margin = margin(b = 30), family = "Times New Roman"
),
text = element_text(family = "Times New Roman")
)
